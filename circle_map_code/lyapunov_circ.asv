% plot the lyapunov exponent of the circle map
% input
% [wmin, wmax] = min and max values of omega, e.g. [0,1]
% maxj = number of lyapunov exponents to find
% x0 = initial condition for the map
% k = parameter, chaos is observed for k>1
% q = random map flag; if q == 1 then use random map, else, use det map
% L = correlation length
% N = number of fourier modes

% output
% plot of the lyapunov exponent vs omega
function poslamb = lyapunov_circ( wmin, wmax, maxj, x0, k, L, N, q )
close all

om = linspace(wmin,wmax,maxj);
lambda = zeros(maxj,1);
n = 1000;
if q == 1 %random map    
    xlen = 0;    
    for j = 1:maxj
        [a,b] = myrand(L,N,r(j));
        [xv, ~, ~] = arnold(x0, n, a, b, k, om(j), N, trunc,q);
        
        %compute xi'(x) and xi(x)        
        Dxi = zeros(n,1);
        xi = zeros(n,1);
        for ic = 1:n
            xtmp = xv(ic)*ones(1,N);
            res = 2*(-a'.*2*pi.*k.*sin(2*pi*k.*xtmp) + b'.*2*pi.*k.*cos(2*pi*k.*xtmp));
            Dxi(ic) = sum(res) ;
            xi(ic) = log(r(j)) + sum(2*(a'.*cos(2*pi*k.*xtmp) - b'.*sin(2*pi*k.*xtmp)));
        end
        
        %compute R'(x) and R(x)
        DR = exp(xi).*Dxi;
        R = exp(xi);
        
        %compute f'(x)
        Df = DR.*xv.*(1-xv) + R.*(1-2*xv);
        lambda(j) = sum(log(abs(Df)))/n;
    end    
else
    for j = 1:maxj
        x = zeros(n,1);
        x(1) = x0;
        
        for iter = 1:n-1
            x(iter + 1) = x(iter) + om(j) - (k/(2*pi)) * sin(2.0 * pi * x(iter));
        end
        lambda(j) = sum(log( 1 - k * cos(2.0 * pi * x)))/n;
    end
end
plot(om, lambda, 'k.','MarkerSize',3)
axis([wmin wmax -1 1])
hold on
plot(om, zeros(maxj,1),'k')
set(gca,'fontsize',16)
xlabel('\omega','FontSize',16)
ylabel('\lambda','FontSize',16)

% i = 1;
% poslamb = zeros(1,2);
% for j = 1:maxj
%     if lambda(j) > 0
%         poslamb(i,:) = [om(j), lambda(j)];
%         i = i+1;
%     end
% end
% plot(poslamb(:,1),poslamb(:,2), 'r.', 'MarkerSize', 5)
end
